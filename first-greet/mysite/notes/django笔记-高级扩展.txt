Django高级扩展

    静态文件：css, js, 图片, json文件, 字体文件等
        使用：在settings.py文件中，添加STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]

    中间件：轻量级、底层插件，可以介入Django的请求和响应
        本质：Python类
        方法：__init__ 不需要传参数，服务器响应第一个请求的时候自动调用，用于决定是否启用该中间件
            
            process_request(self, request) 
            在视图执行之前调用（分配url匹配视图之前），每个请求上都会调用，返回None或者HttpResponse对象

            process_view(self, request, view_func, view_args, view_kwargs)
            调用视图之前执行，每个请求都会调用，返回None或者HttpResponse对象

            process_template_response(self, request, response)
            在视图刚好执行完后调用，每个请求都会调用，返回None或者HttpResponse对象
            使用render

            process_response(self, request, reponse)
            所有响应返回浏览器之前调用，每个请求都会被调用，返回HttpResponse对象

            process_exception(self, request, exception)
            当视图抛出异常时调用，返回HttpResponse对象

        自定义中间件：配置settings.py MIDDLEWARE中添加

    上传图片：文件上传时，文件数据存储在request.FILES属性中
            form表单要上传文件需要加 enctype="multipart/form-data"
            上传文件必须是post请求
        存储路径：
            1.static目录下创建一个文件夹用于存储上传的文件
            2.配置settings.py文件，添加"MEDIA_ROOT=os.path.join(BASE_DIR, "static", "上传文件存储文件夹名")"

    分页：
        Paginator

        Page对象
